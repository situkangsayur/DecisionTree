/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package decisiontreeid3.cs.gui;

import decisiontreeid3.cs.controller.ShowControll;
import decisiontreeid3.cs.entities.TrainingSet;
import decisiontreeid3.cs.entities.TreeNode;
import decisiontreeid3.cs.gui.widget.JTreeGlass;
import decisiontreeid3.cs.gui.widget.Tree;
import decisiontreeid3.cs.listener.ShowListener;
import decisiontreeid3.cs.model.ShowModel;
import decisiontreeid3.cs.model.TableTrainingModel;
import decisiontreeid3.cs.services.Database;
import decisiontreeid3.cs.services.HelpAttribute;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.Enumeration;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.Query;
import javax.swing.JTree;
import javax.swing.tree.DefaultMutableTreeNode;

/**
 *
 * @author hendri
 */
public class ShowPanel extends javax.swing.JPanel implements ShowListener {

    private ShowModel model;
    private ShowControll controller;
    private TableTrainingModel tableModel;
    private DefaultMutableTreeNode rootMute;
    private Tree mainTree;
    private JTreeGlass treeGlass;

    /**
     * Creates new form ShowPanel
     */
    public ShowPanel() {
        initComponents();

        model = new ShowModel();
        model.setListener(this);
        controller = new ShowControll();
        controller.setModel(model);
        controller.setView(this);

        tableModel = new TableTrainingModel();

        treeGlass = new JTreeGlass();

        mainTree = new Tree();
        treeGlass.setTree(mainTree);


        try {
            // TODO code application logic here

            DriverManager.registerDriver(new com.mysql.jdbc.Driver());
        } catch (SQLException ex) {
            ex.printStackTrace();
        }

    }

    public void loadData() {
        EntityManager em = Database.getEntityManager();
        Query query = em.createNamedQuery("TrainingSet.findAll");
        List<TrainingSet> list = query.getResultList();
        tableModel.setList(list);
        tableGlass1.getTable().setModel(tableModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bluePanel1 = new com.widget.karisma.container.BluePanel();
        panelLine1 = new com.widget.karisma.container.PanelLine();
        panelWhiteBorder2 = new com.widget.karisma.container.PanelWhiteBorder();
        panelWhiteBorder3 = new com.widget.karisma.container.PanelWhiteBorder();
        panelWhiteBorder5 = new com.widget.karisma.container.PanelWhiteBorder();
        tableGlass1 = new com.widget.karisma.face.TableGlass();
        panelWhiteBorder6 = new com.widget.karisma.container.PanelWhiteBorder();
        jScrollPane1 = new javax.swing.JScrollPane();
        treeRoot = new javax.swing.JTree();
        panelWhiteBorder4 = new com.widget.karisma.container.PanelWhiteBorder();
        buttonTree = new com.widget.karisma.face.ButtonGlass();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        bluePanel1.setLayout(new java.awt.BorderLayout());

        panelWhiteBorder2.setLayout(new java.awt.BorderLayout());

        panelWhiteBorder3.setLayout(new javax.swing.BoxLayout(panelWhiteBorder3, javax.swing.BoxLayout.LINE_AXIS));

        panelWhiteBorder5.setPreferredSize(new java.awt.Dimension(450, 528));
        panelWhiteBorder5.setLayout(new java.awt.BorderLayout());
        panelWhiteBorder5.add(tableGlass1, java.awt.BorderLayout.CENTER);

        panelWhiteBorder3.add(panelWhiteBorder5);

        panelWhiteBorder6.setLayout(new java.awt.BorderLayout());

        treeRoot.setPreferredSize(new java.awt.Dimension(230, 76));
        jScrollPane1.setViewportView(treeRoot);

        panelWhiteBorder6.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        panelWhiteBorder3.add(panelWhiteBorder6);

        panelWhiteBorder2.add(panelWhiteBorder3, java.awt.BorderLayout.CENTER);

        buttonTree.setText("Start Tree");
        buttonTree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTreeActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Program ID3 (Machine Learning)");

        javax.swing.GroupLayout panelWhiteBorder4Layout = new javax.swing.GroupLayout(panelWhiteBorder4);
        panelWhiteBorder4.setLayout(panelWhiteBorder4Layout);
        panelWhiteBorder4Layout.setHorizontalGroup(
            panelWhiteBorder4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelWhiteBorder4Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(buttonTree, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );
        panelWhiteBorder4Layout.setVerticalGroup(
            panelWhiteBorder4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelWhiteBorder4Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(panelWhiteBorder4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(buttonTree, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        panelWhiteBorder2.add(panelWhiteBorder4, java.awt.BorderLayout.PAGE_START);

        panelLine1.add(panelWhiteBorder2, java.awt.BorderLayout.CENTER);

        bluePanel1.add(panelLine1, java.awt.BorderLayout.CENTER);

        add(bluePanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonTreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTreeActionPerformed
        // TODO add your handling code here:
        controller.startTree();
    }//GEN-LAST:event_buttonTreeActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.widget.karisma.container.BluePanel bluePanel1;
    private com.widget.karisma.face.ButtonGlass buttonTree;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private com.widget.karisma.container.PanelLine panelLine1;
    private com.widget.karisma.container.PanelWhiteBorder panelWhiteBorder2;
    private com.widget.karisma.container.PanelWhiteBorder panelWhiteBorder3;
    private com.widget.karisma.container.PanelWhiteBorder panelWhiteBorder4;
    private com.widget.karisma.container.PanelWhiteBorder panelWhiteBorder5;
    private com.widget.karisma.container.PanelWhiteBorder panelWhiteBorder6;
    private com.widget.karisma.face.TableGlass tableGlass1;
    private javax.swing.JTree treeRoot;
    // End of variables declaration//GEN-END:variables

    @Override
    public void startTree(TreeNode root, int steps) {
        int step = steps;
        boolean status = false;
        while (!status) {

            rootMute = new DefaultMutableTreeNode(HelpAttribute.getAtribut().get(root.getNumField()).getAttribute());

            treeRoot = new JTree(rootMute);
            int pos = steps;
            /*
             * Object[] hierarchy =
             { "javax.swing",
             "javax.swing.border",
             "javax.swing.colorchooser",
             "javax.swing.event",
             "javax.swing.filechooser",
             new Object[] { "javax.swing.plaf",
             "javax.swing.plaf.basic",
             "javax.swing.plaf.metal",
             "javax.swing.plaf.multi" },
             "javax.swing.table",
             new Object[] { "javax.swing.text",
             new Object[] { "javax.swing.text.html",
             "javax.swing.text.html.parser" },
             "javax.swing.text.rtf" },
             "javax.swing.tree",
             "javax.swing.undo" };
             */
            Object[] hierarchy = {HelpAttribute.getAtribut().get(root.getNumField()).getAttribute()};



            while (pos > 0) {
                Object[] subbH;
                for (int i = 0; i < root.getNode().size(); i++) {
                    int numField = root.getNode().size();

          //          rootMute.add(subRoot);
                }

            }


//            while (step <= 0) {
//                DefaultMutableTreeNode secRoot;
//                for (int i = 0; i < root.getNode().size(); i++) {
//                    int numField = root.getNode().get(i).getNumField();
//                    if (pos > 0) {
//                        secRoot = new DefaultMutableTreeNode(HelpAttribute.getAtribut().get(numField).getAttribute());
//
//                    } else {
//                        DefaultMutableTreeNode leaf = new DefaultMutableTreeNode(HelpAttribute.getAtribut().get(numField));
//                    }
//                    step--;
//                    
//                }
//                
//            }

        }

    }
}
